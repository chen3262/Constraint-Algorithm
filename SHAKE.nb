(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     96521,       2030]
NotebookOptionsPosition[     95603,       1993]
NotebookOutlinePosition[     95957,       2009]
CellTagsIndexPosition[     95914,       2006]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Reference: \
https://en.wikipedia.org/wiki/Constraint_algorithm#cite_note-ryckaert_1977-10\
\
\>", "Text",
 CellChangeTimes->{{3.708998759494801*^9, 3.708998762041959*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQeYVdW1xwFRkDbADDPcGVRMYokmxuRFn0ne08SoKSYxJiYx8SUx9kLs
DUtEQBQLKhaUDtJ7RxBQ6YhUQQRBBQUrYEMRy37rt+/elz2Hc+/cAYa5M7P+
37eY4ZYzp67/Xv3Q8678w0V1atWqdW19+ecP/7rxZ9dc86+2f6wr/zm57XUX
nref/PKd2rVqPSjCi0ahUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAo
FAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqF
QqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQ
KBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFIpqiK927DCf
bdliPtu6tXwi3+G7CoVCoaj+2Pbuu+aj9evNRxs2WPlk0ybzyujRpvdhh5k+
Rx5p+pYhfQLpJd/hu2zDb49t8zcUCoVCUbWBnfDesmXmveXLzeaVK8243//e
9GjVyvRq3dr0dtLr4INNj5YtTc8ypEcg3Z30lO+yrZ5Ousu2x8rfeF/+Fn/z
Xfnb7INCoVAoch9ffPaZeXPmTLNx9myzoGNH80RBgemZSKSkl+j9XvKzdyB9
spTwO72CbfbwAq/ITy/d5G+zD+wL+8S+KRQKhSJ38PXXX5v106aZV4YPNy8+
8YTV6d3hjcLCUhzR10k/J/1FngxkQBniP9fffd9vz3NLHKd0l314XPYFPlku
+7ZG9pF9ZZ8VCoVCUXnYILp42cMPmwFHH22eaNrU9MjPN73FDugT4YqQIwaK
DHIyWGSIyFAnw9LIUPe5Ie47gwJOCfkk5JJSfCL79LjsWzfZxydlX5fKPrPv
CoVCodh3IKYx97bbzPMdO5phP/qReaJJE9O7qKgUZ/R3EvKF5wr4YLiTESKj
REaLjHEyNiL+9VFORrrvDovhk3RcEvrQesi+dpN9Zt85hnlyLByTQqFQKCoG
5Dg9c8UVZuzpp5vH8/JM92bNTK/Cwlif1IA0nDEy4IpxIuNFJohMFJkkMjmN
THKfmeC+M9ZtZ5TjoJBLBgZ2SUabRPb9CTkGjmWcHNNMObaP5RgVCoVCsefw
cYJP333XjD/jDPNE8+amZ4sWu/inPG+EtsbQiI3hOcPzBbwwRWSqyNMi00Vm
iDwTkRnuvWnuc1MCTpkQcIm3S6I8ks63FUoPOaYecmwT5Rg/dTnAGiNRKBSK
3cOXn39uPv/oI/PUOeeYESeemIyHt2xZpr3heWNkDG9MjvAF/PCcyEyR2SJz
nMwNZI57b5b77LPuuyGXTHB/Y3TEHon6tcI8rl14hNwwOcZRcqxT5Zg5ds6B
QqFQKLLHl9u3m2kXX2wGHXus6V1cbPVqn4A7Qt7wNof3U+1ib8j3JotMdTbE
DMcDsxw3zBNZIH/jeZGFIi84WRT8zut8Zr7IXJHZbhvPuG1OCe0R+VujRIY7
LiuXLeI4pI/8jaFy7M/KOeBcKBQKhSIzWHNT0/1MmzamZ1GR6UVcPIY30sU4
fHwDn9J4+d4kkSkR3kD3z3V8sNDxxBKRpSLLRJaLvBjIcvc6n1ns+ITvzoNH
RJ4TmeHsmqcSSd8Yfx8OGSFSFod4HgnrS7CzbE6AyEw5F9vknHBuFAqFQrEr
dnzyiZnXrp3pKfq4d0lJKg83zlcVF+cIucPaHE6nez/VTMcb8x1vLA74YoXI
SyKrRF4WWe3kZSe8vtLxiecSzyNzRGaKPCPydIRDrD+rnBzif9q6RfluPzkX
/dhnOTecI4VCoVDsBGvrBR062Lo/fDi9E/Hx8XJzh+jdZ0VmOXvheaf3lzou
WOm4Aa54RT6/VmSdyKtO1rnXeG+NyMsinkeWOttlgfNpzfIcIvKUyAQRa4ew
j45DwroRHw+Ji4nsUvcIl8q5WSTnSO0QhUKhSNoca8eONQvatzfdqf0LdGq5
uUN0bFncscjpfW9vrHbcAE+8Jv9/XWS9yAYn691rvPeqyFoReGSVyIsiUQ7B
DpnhOGSyyHiRMW4fh8m+DREJY+p9E6U5JGqDhBxibRY5R4vkXL0u50xtEYVC
UVNBXPiF++83TxQWWrsjqit9DWAm7vCxchvvSCRj2Dbe4WyBWU6vLwi4A9sB
/Q93rHW88LrjizdKSsybEeG1DSLrRV7zHOL4x3KIyAvOLzbbcRbcNUVkosg4
EZ+X5f1YoQ0S58eK8kcpDpFz1V/O2XI5dxpbVygUNQ1fffGFef7uu21fqJ7O
X5WupiNdDXmpPCvZBjGHp9zaf4azBeY4vf6Ci1kQ61gJd+Cv8tzh+AGu2Ciy
SeStQDYFPAKHvCqyVuRl5/8iHrJYtvl8xAaZ6mwQ68cSGSli83r30Aax50W2
wfeXyjnkXCoUCkVNAHVxC+680/QQHVwWd8Tl6Eb9VmFtxxS39s/kt1rl7Id1
8vej3OE5420nnj82us/w2dccf6wWeUlkueOmhe7vxcZBREaJ+JzeQU7/x/U7
ycYG8RwyUP7+EjmXWmuoUChqAuZ37Gh6HnRQMj+3HNyRyW/lbY+pbu3/nPMl
hblWy5298LLo3FecHRHyx6YId2Tij3UBf7yIDhdZ6P7eLMdf06I+LJERIqlc
LNH/2eZixdogiJzDQXIul8g5VSgUiuqM+Z06mR6i73o47vB6MeSOsvxWcbbH
JGd7+LiH910tCHxXL5bBHxsjHJLOfxW1P0L+mJcNf4ikcnmFQ9LZIOn4Ix2H
LJVzq1AoFNUNX3/1lXm+c2fTXfRslDvSxcvLsj3GiO4d52yPyc72CH1XNm6e
SJTmD+IWjj/WOS5Y77jhTXnfc4iXjSF3uDg731sjskpkhcgykUUiz4uE/qtp
ziaK5Q+Rge4Y+1Pjkdg1DhKVdPxhz5Wc08H40uQcc64VCoWiOuDLHTvMwi5d
zBOi57oH8/8yxcvjuKOU7SHbSeVcuTiDj5s/F8Q+UvyBbhVZ6fT+GmdDWBtE
3l/v7JA3YiSVe+U45xVnw4S2xwsiC0TmiDwnYnN4Ha+F8Y9S/CGSioG4Gvs4
/ojOQYzONfHnaqCLy78o5/orOecKhUJR1bFm1CjzWGFhcs6488lkE/MYmCg9
3ynO9pjgcpxC35WPfdDXysfOPX+scHrf2yA2f9dxw+uOJ9a3apWS10VeE/E5
V2vcd23urvxcGtoeIrNEnhWZ7uwh/Grjw/h5lD9EUv4rOMTV3MdJ30Rp+yN2
LhYcIuf6dTnnCoVCUZVBrfS89u3tDNeQO2JjwRHbI+QOn68btT0mOtvD+658
7MPzh41/OBthmbMXvA1C/II8LMsjwhHr4ImI8BrvrRFZLbJKZKXjIls76Lhj
vshsb3uIPC1ifVeyD/iuxhS7/F2RIRH+eDLkEM8jEb6I8kamPIOBcq6XyDnf
oXXqCoWiiuLzDz808zp0MN3y8+0s8KjfKtaPX4bfyuZciX713BHaHjNc7MPG
zuX9eT5+Lrp8sbMVvA1iOcT5oSyPCC+84ngiFDjjZc8bIi+KLBOBj7BrQu6Y
KfKMyDSRKSL41aztwX4735Xnj0FR/nCS4gcXE4lK/0TpOFH0vKU4RM75Ujn3
O+QaKBQKRVXC5x9/bOa0a2cek7Uw3NEzkaGOIWYNHc23itYK2pyrGNvDxz5S
/OFiE54/loUcIu/jy3rJ8UNUXnKcsSLgjaUii0UWEu8gRh/YHSF3TBaZIILf
ys6Wiviu0vFHf2eLWHG5WVG+iPJGyB3h+RuEHULPRbkWCoVCUVXw4fr1ppvo
wu5BzCNb2yNtzCPgjrDeI2p74Lti7tN8Zx+84GIUSyIc8qKLYaxwHLEi4Apk
ecAZS0QWwRsiC0SIdZAf7OMd3mdl7Q7PHSKjnd/KzksPfFeDHHd4/iglIUdQ
Z+hqDQeWIYMCseeQno2yvY/lWigUCkVVwI5t28y0yy+3ubrdA9sjbQ1cYtdZ
HnHc4Wd6lMUdc4LYR8gfiwMOWeriF3DJMscTyyJ8sdhxxgsiz3veEJkjAm9g
62BzTBeZSrzDccd4zx0iI0Ws34rjitgeof0xICL2/ZAX5LgHI+4cpZNBwe/2
PBLXl2vxhVwThUKhiIPvX/EJMzTmzTNPPvmkefDBB82dd95pHnjgAdOvXz8z
a9Ys86Hzh1dUvwvmrT518cXmsaIi84Tou2zjHuni5eEcQZurK9tkvkZW3CGy
MOCPkEOsFCfzshY7rgj5YmGEM+Z63hB5TuQZl2PlbQ78VRNjuGO4SMruQL8H
3DEwjjMcvwxyXIP4c2JFjn+YOz9DAxkSyODw//T8lWsxV67JVzoLV6FQBIAH
vvrqK/PKK6+YO+64w/zkJz8xrVu3NoWFhaZZs2amcePGpmnTpqZFixbm4IMP
NieccIK5+eabzcsvv2y+/PLLvcojbIt8q37HHmseF53lbY9MtYLebxWNl+8y
gzbhasxFH9rZ5cWlaz2sz6p4Z81HyB0hf3gOWezi34vc+yFfzI9wxmyRmSLP
whsi072vivh9wBvjHG+MwuZw3MH6f4iItTvgyYA3BsbwRoozXKxkmIubYMOM
cOfFCrMN3e/DnYScEvIJ/DFOrgn5WNonS6FQeHzwwQeme/fu5phjjjEHHnig
qV27tqlVq5b9WbduXXPAAQfYn/51pH79+uaoo44yjz32mNmyZcte2xdi5uPO
Pts8Lrouanuk813FzaCN4w7bG1HkadmunSdYvLPOY47jDeIddiZtIlkzGOWN
UCxnOP8WQpx9fuCfmh3YGvDGDJFpIil7Q7470cU54I0xEd4Y5nlDZBDi/VEx
Nkccb3jOIHZC7tZoJ+QBj3HnBhntztXIgFuiXGJtFs6XXBuNpSsUCvDee+9Z
mwMbw3MDHFIi+uqXv/yladOmjbntttvMlVdeaX7zm99Y+4P3/WcbNWpkbrnl
FvPOO+/slXXpxPPPN4/IWvdx0VeZbA/PH1G/VSbuYB6UnWEu235Wfs6K8Ia1
N4qTva4Wyfv0S7TifFWLo9zhecN938bDyaUKfVTYGvCGi2+k/FTy+fFZ8sZA
JynOCGyukDtCe2NEwBnwBTlc1JCQCzzBizs3+PTGuXqYKJd4HhnmOGSoXJs5
co0UCkXNxkcffWTatWtn6tWrl+KDhOiJa6+91qxcudJ89tlnZseOHSnZvn27
9XHBF/CIt0f4/o033mjjInvCIR9v3GiG//rX5tEWLWyfEp+zm8539WRi157s
Ue6wcfJEMMNcdCAzzGcnds4x9/NoFzm+IKZBXJyZTvani5WHHOL5w9ocIuTg
+lwqn4dLPtUuvBH4qaK8MTSGNwY4edJLECv38fF0PenHOM6AK3ydy1MxMtn5
9Sa6mphx7vyNivFtDZFrM02u0Ta5VgqFombiiy++MMOHD7fxDc8d3/rWt8zg
wYMtV4B0XECsZOTIkeboo49OfbdJkyamb9++Nh6yu5gitk7X/Hxre3j+SOe7
ivqtvO6M446nHXdYm0O2ncrLdbzhOYMZTssDYS6g/b0kma8bckjIH97uCLkj
Fd8o2TUuni1vwBf9nfRz0t+9zvuh7eH9VSOdzYG94Wcppvx2xcl8gekR4bWn
3Wcmu9w0vuvtkVK2CLF0uUYL5FopFIqaB3hhw4YN5gc/+EHKhsDu6Nmzp+WG
bDFgwADr5/IcQjxkzZo1u2WDvCf2zvDTTzePyPr2cdmXsuLm3vYI/VZhP/aQ
O2aIPOdsjnmi/3w/xMXOzoAjmAm10slLXuRz/J86QWo8ljsO8fzh68aj9X/R
XNxofMPnVHneiOMMuKJvREIOGeC+M9htY5jjo9Hub4U9vXxPyGfceSDPbJaT
mS4GRP7ZDOffm+rmv09w5zLKIUPlGk2Xa7VVrplCoahZwPZ49NFHU3EMYuMX
XXSR9WeVB/izLr300pT/q2HDhqZ9+/a7xR/P3XabeSAvz3QT/fREFvzhbY8w
5jHarZl9vCPkDltLLrJQdONi55fyvGF7kIisjop8jtfpc7XSccgyZ4MscvaH
548yawADm8PHNzxvhHaG54o+MeLfi/JHlDsmOu6a6riM/fKzTGx+mRwXHJqK
27jXySPgXMEz01yO88TAnxVyyGC5VkvkmikUipoDdDtxCnJ0ve2B32rq1Km7
tb0FCxaYQw89NGWDkNtLTL48eFO2MeiUU1K2R1n8Edoeoc9/TKJ0rDzkjvnY
HCJLRC8ud3bFKscT9FKnh+664uQs83VO1srneI/eVi8HHOJtkDj+8LaH7z3i
83FDm2NwYG94W8NzRG+RXhHp7cRziOePQYHtMdLx1AT3t592XIZNhG2Ej83W
QYZxHs5HIpkn8ILz58Els52vb7qcqynOBxa1Q4bJtZoq1+w9uXYKhaJmAP54
4YUXTEvRDV7nk1e1bTdriz///HPzu9/9ztSpU8du66CDDjLTpk0r1zYWPvyw
ub9xY/OY6KVM/FGW7eH9/ei86QF3LHDcQTx8hRz3Kvm52nEGfPGayPqIMM/j
Nfmc5xM/68n3zQ3ndcAfu/Q9LEnGO7zPynNH1OboG+GMnk56BL/3DHgkyh9D
A9tjvPu7Ux13zHT75vt3hf2DQ3/dikQyzrPUcQs8MtedP88h3g7xHAJnD5Jr
tkqunUKhqBmAP7p162bj3ej7Bg0amJtuummPttehQwfru2J7eXl55t577y3X
NhY99ph5sFkz67vy/BHNvYrzXYUx87GJnTGPaW79PDvCHSvxR4k+fMXxAhyx
QcTODBTZ5GSje+0NuEQ+C79E5wX6mR0hf6R6rpeU9luNCOwOH+PwNkfvCGd0
j0gPJ3H84X1Xo9zfmui4a3qEOxY53gh7ztt+8yXJ2SWvODtslfPnLXX2CH6u
ma5WxnPI2MTOvKwhcs1elmunUChqBtD3V1xxRSpmQY15//7992h7o0ePNvn5
+alYygUXXJD191+bPt10P/poW/Ph+aN7IhHbsyTqu/K2xxhne/iYB/77WYHP
KsUdImtFH74uP99wPPGWyDsi7wbC/992770pn4VjXi8pPa8cG2Sx8wlF+WNy
YHuMLNkZ7/B2h+cOb2943ngiRjyP9CzZ6cPqX7Iz9jG8ZGfcw/ut8KPNCbhj
udtn+A8e9DOu/KzEDY5LX3VcssrFhqiB8RwyzZ3f8aENQk26XLu35BoqFIrq
D/T9OeecY/W89zc9/fTTe7S9559/3hSJLvH+sDPPPDPr7y/r29d0kXXso6KP
suGP0HcVtT1YIxPzmOn0HjXk+PdXOO5YJ7JedCGc4HnjPZHNIlsC4f/vOy55
Wz4Lz6BrX3Xr9lUlO2fOEgOZF/CHj32Mj9geg5zNEOUOzxuPO+nmxP/fc4i3
QUL+GOK2T52Htz3YB2Ix8wPuWOX2+zXHF8xkhx/fkZ9e3nJ8ir21zuUTwCHw
r/VluZ4vPhYS2iBr5RoqFIrqD/T9b3/721S8gtg3vRL3ZHv0wSoWXeP549RT
T83quxvmzDFdDznEPCy66THHHz72EccfUd9VGPeYHOO3Is/qRW93wB0ib8rf
ghPec1zxgciHIh8Fwv+3Oh55Tz77tvNnrXfr99XOF4QP64UY/phUsjNuPjyw
PcJ4R5Q74IzHIuJ55Ik0/EHNB/UeY93f9LbHXNe7cZmbP8JMK2yOjfCGyPsi
W0TssfPT/f99Z3e96Xx2IYfMcXYdHD0hEdQXyvkcKdfwHbmWCoWiegN9/4tf
/CKl67/xjW+YRYsW7dH2Xn311VJ1ID/72c9sjnBZeP3ZZ02XggLzsOihbPkj
9F2NzGB7oPOWiRArJ97xesAd74tsdVzxicg2kU+dbHOvfey4BY5519krb7g1
/BrnD1oW8Adr/mcC/kCnE5fAd+XjHt726Cnb6i7yhAh9vphx8qiTR+T9R514
DonyBz4w6gZ97ANb5ynXJ2WW69242M0hYf4hs9c3irwrskUEztgm8qnIZwjH
LT8/FtnqOHOj82fBIcscH89yfqyoDTJUruHbci0VCkX1Bvr+D3/4Q8r+oM/u
7Nmz92h7K1assPWHnj/om1UWdnz6qVnQtat5oLDQPJIFf4Sxj9B3Nc7pMx/3
8LaH91tRw0Ee1RtwgOg/uOMDxw9wBbrz80C2u9c+DThks3wHX9ebJcnYgfdh
LXc+ovmOP2Y4H9JExx/EPrzvip4jfUV6i/SAO2SbIXdwDh7hZwyHPF6yMwYS
8oeNfQgfTBCZ4nptzQlsD2bmMn/9TZF3HHd8LPKZyA6RL+X7XyGyrS/k5+dw
irO/3nccgi/rJWfLzZXzF9ogPg4yTK7hKrmWX8g1VSgU1Rfo+3PPPdfsv//+
VtdjN4wfP36Ptjdz5kwbh/f88Ze//KXM7729bJm5T77TFb1ZDv4IYx9R3xX5
pvjqFwa2h/dbbcJnJfpvq/z82PEDXPGFyJciX7mf/H+He+9TZ6Nsdf6uTS4O
gg+LepAXM/CHj53jY6LPCDNlOY6e7vjgjsc8d4g8jMjr9qd87+FM/CGf8bHz
McIDE+np6/o1znPzR1Y4nlvvfFZbnH2xHd4Q+VrEIPKal69FvnT2yEfumMkz
eMX5ATmvs9y5npQonYsFh2yRa6pQKKov0Pf0PyRvF13fvHlz88gjj+zR9uh7
xXwQ30vx6quvLvN77yxfbh4QvbM7/OFjH75e0PuufM6Vj3t42wN//jsiW4Q/
0IufOlvjC8cbXwfieWSHs0M+cTbI+4EP69WAPxan44/iZA9ceuIOcPufsj1C
u8NxR1eE88FPxx/eDumWhj9GiP4fKzLJ9YWf5WaPEJd5KbA93hP5SATu+Mrx
hPH8EcMhXzn+/NDZXeRmvexsunnOznsqsbMexNekb5FrqlAoqi/Q98OGDbO8
4fNtL7744j3a3lVXXWXngbC9goIC06tXrzK/l44/wvqPTPwRxj6mBr6r5xM7
83VfidgeH8jPT0S2R7jDBOJ55EvHMducPwcf1ttuPQ5/rE7HH8XJfrf0MLR9
PkToldtPpJfjD297lOIOkYfksw/5/wc2iI+BWP6Q9550MRXPH5Nd7IO+8eSD
LXe+q9dF3jroILNFZJvIF1G7I8ofnAP3O+fmUzihOJmXtdZxMud3pjvnExM7
+5oofygU1R/o+3Xr1onaaJXyN9HL5I033tit7b3//vvmRz/6UWpb3/zmN83i
xYszfufTzZvN6HPPNQ9m4I9w5rnnjzD3amSidOyDvKs5iV19VxvQ+yKbve0h
siMNd4Qc8pWzQbwPCz2KDUMeFnFlyx/FyT4g9JCiFyE9CumH7mMDzOGgNy72
Anrfx81D/rC8EYrnkCz4Y6Rcw3EiT7nZVNR8MDf3RXKuhC82iLwr8qHIdpGv
RAySBYd87Tj248AG4Zwucud5euDD8vwxR67pdrm2CoWiegL+YK4HMYr99tsv
VUPYo0eP3dreoEGDUrUfxOTPOOMMu/1M+GD9enO/6KgHRaeXlz987lU0du5j
H+Rd0d8Kf8urznf1rvNdoQu3i3yRgTtCDvnC+bA+9vxRnMxttfwhYvkjkfSZ
zXI6Fb/OeGd/wB/EufsH/BH6rrztAV886EW+z8+H5Px0dT6sx7LgD3K/5vjY
h3DEWpE3Rd4T+Vhkh8jXnj8ycUhgg3AOtjsbBN5c47jZ+7AmJ4I8LGbhync+
kWurUCiqL+jRPnny5FQPE1+zsXr16nJt580337Tf89vAJwaflNV/94MNG8yD
rVvvlv0R5Y8wdj7PrY+jsQ/4Y6vot08cf3y5J/yB/eG2z9+hXxQ9B+lvyxwN
eqYzs4nZf2Hs3Mc+4mwP+OIBL7JNfj4Y4Q9i6D2C/Ks4/qDuY7Fww0qRdSIb
RTY739WXIXek45AgDuK55AvZH/x3b7vj5pgXuPNN3MnXoxMDGSnX9BO5tgqF
ovoC/b5161bz5z//OWWDMOOcWbXvvvtuVttgZjpzCn0cnu2czkwI2W42/PHQ
vuaPRCJr/ojzX212OpT4R1ifDX/Q+/y5CH9Q1zfE8Qd5u72c7yq0PaLc0QXx
/OFsEO/D8vzR2/OH6PsUf8j/yd31/PGS449NLvbxaei7iuOPdHEQdx62JZK5
WNTQkMvr87Cw+7yvTvlDoag5QMcvW7as1AxB5oHQG4sZtfTVjfIA/2c24fr1
6811111Xyn45/PDDbV/fbOZPxfHHo45D4vrv7lX+cHZFWfwRjZ9Tm03+Fb2i
6DlIjyjmFTIvnbkazF9iTtOk4uTsv1TuVXHp2Ifnj6jt0SWUiA0S5mBl5A/h
BM8fr2bDH+k4pLi0D+sz2Z/N7thfdud4tjvvPoau/KFQ1CzAEfQ+JObteYCZ
IMzwIKeXunS45LXXXjNr1641S5YssTMKTzrppJTd4mvYhwwZYrdXFr768kvz
6owZ5qGDD47lj7geWLvDH2H8w+buihD/+MzZFZlyr74qLu27oiabXljUfxBH
pscgfc+ZeUuvc+YuPVOcnPXHnHFyd5klG42dE/t4LMb2gDPuDyTKH48E/EEN
Ov1LBomuH5Elf3y2h/zxeSJZr4/vDl4mj5dYk4+hp/hDrulbcm2/3oMZxgqF
ouoAe2LixInm+OOPT+XghvGMY445xpx44onm2GOPNS1atCj1Pj4vZuCOHTs2
K+4An27darp++9umS8uWGfkjzOFNl78bzb8K4+fkCtEvMZV/lUj68bcVp6/9
CLlje2B7hL6rUrHz4p25V8wRJ/eK2HkY+yBvN4x9hLZHyB33BXK/7CuvPyD6
+6FIDB3+6Of4Y7jP3yV3mPwr4YNFQfxjk4t/lNv+iORh7Ugka/bJ4yWGvtSd
6xmJSA6WXNMxcm0/l2usUChqBvA5LV261Pqu8Gf53u7phPePPPJIc9lll1kb
5ctyrDctf8h3Q/54OAN/+BhI3xj+COs/wvxd9Bt++lL1H24N7WvPPYeEtee+
btDXnnvbw9eeM1cq9F0xIyNT7APfVTT24ePmD6bhDiuyr/c7/njQxUDCHCx6
MA4UXT9MhPpz+m3Z+g/hg4UiYf7V+5ni51nYIJ4/PnTngHPqc7BmOPuvFH/I
tVX+UChqHphBSC+Su+66y/z97383p512mq3t+P73v299Wqeccor529/+Zjp2
7GimT59e7nnpIB1/ZIqBeP7w/ROHOH9JtHciMd1o7yvvw7J9E4uLU72vfP+S
uN5X2wLu8HGP0PZgxhK+K+aHe9/V1OJ43xX2B8dBrvITjj8ecv6pLgFn3BuI
5w/eD2MgYQ7WANHzQ0Xof0W9u60/Fy54XuRFkTUibwT5u1/sCX8UJ2vRy+KP
YXKMo5U/FIoajy1btpg1a9ZY+2LOnDk2Nk6f9s17WB+WDX+ki4GE/OH7X5H/
Q80Fvnjfe3dR4MMK+1+943xRnkPC3rvbAt7w/dtT/cyLd8Y9XgpsjzBvN/Rd
+bpBfG5tCwrMHxs3Nhc1a2bOF7lXjpv4xwPOTxVyxz0xHBL6sLoFOVjwxxCR
USLMOqT/1UzhggUiS0VWi6wXecfVD34erf/Ilj9E4FbyDzZm4I8Ryh8KhaKC
4fnjftE11Do8VA7+KKuG0Puwwh4ma5wNssGtn99xvLC1eNfZH6XmfkS4A78V
Obs+7hFre7AOL07GPm7LzzenNmxoWu+/v/nRgQeaS4Q7Wuy3nzm2fn3zT/n9
HscPnjeicq+3QSI+rDCGnsrBKkn2b3+W/okuhr5K5LW9kIMFf2CXkX/gawjj
4h/KHwqFoqIRxx/Z+rDK6oEV9lD0cXQfB7Ec4nz48MK7jkf87EE/c/A9xzGb
Au7w9R7eb0XObhj3sLYH9pD8fLiw0JzZqJEpqVvX1CFWVLu2uVK45A55/RsH
HGDjR03q1DEnNGhgrhTb5G75HnzRORDPH/cF/OF9WPjAfAwkXQz9hSAGEvqw
dqlBj+OOCH/QbxH7jP6R+PB8H8W4/CvlD4VCUZHIlj/ibJBoDCSuh3tog/g+
vH6GFPGL9Y4XPI+E8lbAG3DNa4HdAXcsDfxWvt+Vn4XRt6jInNukifmG2BsH
CGf4XINC4RF8Vhzvbxo3Tr1el16TYo/8VGyUG4RbOsk24JK7PYfI79gmu/iw
5P+ZYiAzXQxkmcjLIq+LvC2yNV0ebxn5V7YHVnFyhlbYAyuu/mOoHOMoubbb
lT8UCkUFIMofD0Z8WJ5D0uVheRskbgaht0Gi8889h6xxfPCa4xE44g3HF284
We/ex+ZYE8MdPl/3GccdQ4Q3rmra1BwhvFEv4A1bky/yR+EUjo+4OXZInpvb
5WV/xzG/Fm65WbZ1Z4RDQhsk9GERA+kv+t77sJhBOCXiw/J5vL4P1kdxcZAy
bA/yCehb/JY7JyucbRetPx+u/KFQKCoY8MdDomPuE13TJeCPdDZItBY9kw0S
ziGcFeEQfFkrHR94HkEfvhrIOve65w1i5cudz8pzB7XmbH+k6Pp2zZqZ79er
Z3mjdkyeczPhinbMVyxO5ux2kO/8t+v3EhV4pEQ46E/CRbfK5zo5v1Zog6Ty
sAIf1kDnwyqVxyuCDbLcxdGxQXwf908ch2CHfJ3Bd0XcY4cItge5z3As+QN+
lu1zjq8576Mclw9R/lAoFBWIKH/E+bDSzQOJs0Gis6SeCvxYIYfgy8KGIP4N
j6xyHLE6kJfd6yvd5/j8YhfvsLlWcJXo9s5iR5xYv76pn4Y3vJwoXHGfy7fy
teZ/E36om+E7+8s2DxNO+kfz5uY2+Vt3exukeGc/LJuHJf/3PqxUHpbIVG+D
BL0UfS/3d5wfy3KIvP+VCDzheeTrkp3zo+AOZqITG3pL9uE1d2587COcITUy
4I+Ryh8KhaKC4Pnj3oA/yrJBfBwknQ3ic7G8H8tziLdD5ro1M36XxY4XljuO
CIXXlgW8gc1BntVc57OaKPvcJi/PxsYz8YbngTbCMxyTrzVHrm3RIhVHzyQN
xHY5qVEj01Y4JM4GIY4e1qJHZ0kxi/B5kaUiq0S8H6vUHHRsjFbJebZwyVcu
3rFdfn4iQi4auQTMjn/FnSO42Mc+wtg5PD5Y+UOhUFQg4I8HHX/YPh1p+CPO
j5WuHt37saIcgi/Lx0NmO1tkgbMn4IZFjie8LHKvL3S+KniDHN3nXLxjPPNK
CgrM5cIhPxfbomXQAywqRwhH4K/q6njD15nfJfvwc+GFdN8j9n6ofPd/5TP4
sm4sLNwZB0lng4h4G2S8CHEQ+mHZeVIlO+cRMs/2DRHmoW8W+dDxyDaRT8mz
wuaQbX5UkpyXHs47ecn58eZHfFc+9jHE8ccI5Q+FQlFBgD8eEB1zj+ia+xx/
ZGuDxPXECmcSjkjDIdOdP8vzyBznj5ofkXmOM+Y4e8PzBjm66Ev6k1DnwXxa
dCb5Vul8UX+S97o428PWmcvvngfObd7cNI3hHmyab9WrZ64VziB+frcTfvf1
IKVsEGpB5DVrg4j4OMhEEeoJn3N+rEUlyVm7zGxfJ7JBXtsk8q7IZuwRbA1n
b/D7+yJwjK25l7/re9XDq7MTMXXnjj8GKX8oFIoKhOePzqJrrE6M2CDlyect
i0MmOD1HntTT8vemO58WvDDTcUQoMx1n0It9hueN4mR9B7xBbytqPKgR7C62
xc/EBtkvhjuoE7xe7BRbZw5niHCsHHNn+XmL8MN3I70qazs5aP/9zcXy3U7y
XXKx7go4JNYGIZe3eNeZhN6PNVNkPrGQVsm5tviy1oq85myRjSJvOb5A+H2j
CHlotu5F9uFFZ5vNc7bH04mdebvD3Xnn/A+U4xuu/KFQKCoI8EeXGP6I2iDZ
xELiZqOHviz02zin6yY7ewQ7gjkd053McOL/D2fwPr3Yvb1BXxJmetCbhLke
vWXfT3XcQQyd+vJjAz4gbn6X68/C8eGrw94iFo7/ip/k6/o6kUZ16pgTGzWy
P+s4G6RNixYpDunkOMTbL/jDwp5YNhdLXhsoP4eKeD/WUxEOYbbtMpGVIqvh
Efnsq3BFIK+714h3kPPsZ2Rhn2G/TUvsnFs70nEHeQzEogYofygUigoE/HH/
t79t7kanurV5Og55OA2HpJtPGMZDfG3I6IBHJsjfnOS5xNkVUwJ5ynHGJOej
8rwx2vEGfa36yzZ+27ChzdnFd/U/5FiJLXJ1fr5pWbeuff28pk3tMaS4w3EG
3GH5QOQysTHI14U/filc0pbt5uXZ78Mh3xVOwo91JxxC3CTixyKfK+zLa3ua
yGvWjyUyWmSCi4XMcByCL2uhyBIRYiIvOZ8WuWdr5CeyWoQ8K2peyNX13GHr
JR0HhzNrh3jbw/HHMLm2yh8KhaIiwPyotTNmmHsOPjhZYx3hj73BIQMTO3N7
hzseGeV03ljRceOcDhzveMJzxXjno4IzxgT2Bv106WmFjfMX0fWNnI7/vtgc
nYU76M3+gGwXu+PwAw4wt4jtYP1WMdzRUaSDyB3y3n/J5xPCIf+Wz7eX126W
105p0sTaNcjxwlM3UVMo24/aIN6PFc6W6uM4hN6NKQ4RYb7UdJHnRIipL3Bx
9SUi5Jstd/ERxOegke/MbKx5AXdMTez0W4W2xwBv/8k13ajzoxQKRQVi64YN
5p7WrW0s4N40Nkh5OcTHQ3xu74AIjwxz62XLJdS5OT5JieOLUS6+4TljiNPH
bO9fYh9QE1jb5Vd1FPvgcbc/yL/E7jhbPnOfyw1A13eO4Y4O8j6/k191hnye
uvM74BSRG+T3Hwtv1HY5wD9r1MjcKp/vFHKIi4VYP5ZI6MeCQ2wsxB1DyCHT
RJ4RgQ/mOrviecclXoiR0/vF10o+5/x6njvGJnbWC6b8Vp635Zp+rPNrFQpF
BQL+6Cy65m6nY7PhkGzzskJbJOSRQQGXWD7B1+L0YCi85zljUHFyhiDbubxZ
M1PkcqYOEZvhVrEZurl9eYS8XuwM6sZF7nfH5LmjU8gdIu0dV9won6W+43b5
/u3yf6SdyFXCS9878MDkrC7hkNPFJuH1TqEfq9jVhMRwSF/PId6X5WwrfHNT
nS3yrMhMkdnOJrHiOIOamTD3bEqEO3y+7kDHG/2dKH8oFIqKBvxxt+iau5yO
jfJHnC8rm/qQ0BaJ8siTAZd4PomTcD3N97Bnrmve3BzsYhUJ4ZDr8vPNo6Lz
H3X785DbT2aa3OfyAkLuCG0Pzx3wQTt4I+AO/3s70dmXCT8d5uZANhSb50/C
X+3jOIS/XZycqc5sdR8LiXLIKJGxzhahV+8UZ4/AJc84rkB8LsG0IIdgvOcO
4uOJnTEPf476ORmg/KFQKCoYW9evNx1Fb3VyOUlxNkgmDinLFonjkb6BnvPr
5ScjP70u7OuE790iXHGYqxenX+6losexNx5x+/GQ28f7E0Gebjbc4TlD5D+h
yLb5eYfo7fMLCmw+r51FL3/778JjHRM787FK5fRyTjyHFBeX4pBBLi9rhIuJ
jHM8MsnxQ1wegc8hsDnLsu2Rzl7zPquQO+z5kvepQ/lYrq1CoVBUFLZt3myG
nHtustes07dlcUh5bJGQR3zNesgnmaRXIHeI/v6uswGIe/wjL888FHDHgxHu
COMdmbgjljdiOAQ75BzhDPrzsg/F8vNC4bOOMbGQFIdwHhyH9BShNoRZUwNd
TGSYywkY7XIEbC5BJI/A5xDYmFBiZ29dbA5vm3ku9jzLzxlyTT/bw/mUCoVC
URbeWr48uZZ2HOL5I+SQdLZIurhIlEeiXOL5JJP4z3Vq0cL80NV0NBbuYAbt
/UVFSX+Vq+3okthpc+wud9yWThyH8NmzmjZN1avT24TakDvTcQi+rMTOGVz0
OOktQn0I89jD/GabT+DyBUYVl84fsHlniZ19rbxfz/v0+sTI+3JNFQqFoqKx
SXRNB6drfRykLA5JxyPp8rQ8l0T5JJPwmc6FheYnLn59YO3a5peNGtk8XWtz
uLklob/Kc8fde8Adt0Yk5BDyr34jtk8Dl/t1lPDaNa42xPJvhEN8PORRkbDe
0saDHI8MdDkCQ5wMjYjtZ5VI1pR73ugXcEXUblP+UCgU+wqbli0zt6MDYzgk
9GVlskXS8UiUS0I+CTklFPsePR3pS9Kwoa0NpD6cmo47HXd0cT0f43ijPHZH
Jt7YhUcch1BfeIqrWac25PvCb7vUhkQ4pKvjkG7On4Ut0sv5tOCR/o5LBjg+
8cL/rZ9K/mYY44jz8aVEruX7ck0VCoWiorHj00/NrK5d7VzwbDgk5JFsuSSO
TzIJ/ICtUd/p6P8SHc38J9uHxNV0ePsonc2RLXeEHHFLjMRxyPXCFz8RbtvP
1Yb8SH7nvXQc4nN7H3Fx9ccjPNLbcUnfUBJB/oBs29sacETPNNJDztEyuZZf
yDVVKBSKfYG1zz5rbi8oSMVBfG8oHw+J+rMy8Ug6LonjlDiBO86gttz1oPp2
vXrmVtGLvo48jjfibI69wR3peIRt4Lc6VnittqsNOVn2mb8TcojPy/L1IQ85
f1aUR7o7Lunp+CRlS8jxIil+SOwaHyr1mlzDN+VaKhQKxb7Cq3PmmA6HHGLa
s4aO4ZCoLRLlkUxcko5X4gTb4q95eaapiy+03n9/c0OLFmntjbsSO2vKo/6q
bLkj5Iib00gcj7CNK2TfDnd5YfAdfbPax3CIrzEM/VmeR7xfy3JJIsgxkHPh
OcLLEzHSPfh8b7mGm+RaKhQKxb7Ewr59zW3NmlkdnI5DvNyT2JVP0vFKHL+U
Ejf/ENviX/L3W7j8pkTduubK/HzbL/ee4G+HvJHJ5igPd6TjjXRcEvqzLpE1
v69pbCb7/mc5hg4Bh/gaw6g/K8UjidL5ajbHQLbr8wwyic81gEe6yd9dKddQ
oVAo9jXWTJ9u7jn6aNO+qGgXDknHI1EuieOTjBLEMi4Vrmjl9DD1gRc1b257
A3cO/nbIG3Ex8kx1geXhjrYRyWSLsM1zZd+LXG0IvX+ZS9UhsdMu8uevPH2O
o7kG0byDUhwi16y/XLsNcg0VCoWiMjDnscesDdLB6WXPIVFbJB2XxPFJJvE8
gp3hZ5FTH/h32QdfEx/HGXE2Rxx3RPNzM3FHlDOQmzJwSSl/luzr2bLPzZzt
1FqO5RI5pvA8+vPnz1E6HkmXa/BIYlde8TzyqPztpXLtFAqForIw8+GHTdvG
ja0uTschUXskE5eUJejRa1u0sDHyVH1gXp7tixvGxaO8EWdzlFXbEXJHOt6I
44u496IcwvZvIe4v+95EjoFj+Xb9+jY+Ej2Pmer8y5MLHfJHV7lmi+XaKRQK
RWXh9QULzGOnnGJud3MwQt2XjkfiuCQbQYfe5HKY0LcNatc2vyKHqagoyRsu
lp+JN8rqY5WJO+K44aYyJM4WucVxB3/nJuYhyjE0cBzCsV0nxxjlkKgtkq5f
TCYe8RzyiFyrYXLN3pJrp1AoFJWJSbfdZtrKOvoOp5+97ovjkTguyUbQnbcK
T/x3gwY2R5davJOooXDccafjjo6JzLyxu9wRxx9ebkwjcTxSyg5xHEJtyP80
amRzeskh4xjpDR9n08XltkXrNNPNYfG+rIfkWs2Wa6ZQKBSVjbdWrjTdTz/d
3Cbr2pBDorZIlEfKI7eLPj1R+GJ/N3v2eHSsrNPhjo5uplMY30jnq8qGN7Ll
jihHxPFG+P90HOJrQ34gx1TX1RcyU51ejFEOCe2QqC0StUfiOKSrXKMRcq3e
l2umUCgUuYDhbdqYm/Pz7RwMzyFRWyTKJdkK82JPa9zY1pbb+eL165vr6UMY
cEcm3qhI7khne5TXDmFfrhAOObJePXuM+OZ+gW9O3otycVydTbT3WJRDrB+L
3pFyjabKtVIoFIpcwQcbN5rHf/1rO9uvndPZIYdEeSRbPqE+8XdNmtg5TPh2
viX69WrHHXGckS1vlDfHKpO/6oYMkolHStWHOF/W5XJshxxwgD3WPDnm31Nf
GMMh6WIi6eZB2jlZxD3kGn0s10qhUChyCQPPP9/cUlRk/S6eQ+J4JB2XWDsC
n03LIivtRP7StKnVo8SWqfW4vKCgXLwRzctN1wMxrqa8LO7IxBtlccgu8fTE
zrzeC+UYfW1Igfz8W7NmYoMVWR4JeTeMDWXyZVkOke8+JNdmolwjhUKhyDVs
//hj0+fss81txcWWQ/xM8DguCSXkg7YFeebfeXVMm+b7md83rmOa16lt9Wih
m790h4sJZOKLsuyNdH2syvJX7Q537A6H4M/6R/PmtieLrS88oLb5Y/M6pm1R
Xin+8LGhOF9WKf7Ab8VMKbk2n8s1UigUilzD119/bT776CPT+dhjba6Un6EU
6vVQ58fxyE35TczlTURfirSoW8vqzzzhkLPzmthYQDacsbu8UVHcUR4OYb/a
FrUw17Vobk5rUMc0rJM8BwfJubigeePd82PJtegh12S7XBuukUKhUOQivvz8
czP44ovNzaKzbg3m8HlJxyWeT+CPPzesZUocdzSsXcucemBtc1mT/cwthflJ
3nD+sfLwxt7gjpALro/8HifZcEiKP+SY2J8b5BgvblLXXNS0tjm/WW1zYsPa
pn7t5Ln4DrOnWrQo5e+L1vrvYoO4uSgT5ZpwbRQKhSKX8fm2bWbY5Zeb20pK
Ur3LM/GIF/jj4uZ55lDHHejN/xX9iS69VOyRNqJXb5Z1eZQzdoc3dpc70vHG
dRHJxCPpYunYHBfl1RU7Q465sI65WOS8gtrmuANrmf3lfBBTP65BA3NjYeEu
fqx0NkgXuQaT5FrskGuiUCgUVQGb1683txQXW1++7xkY6vio/seuuNrVlpO/
ir48XuyOC/KFOwprm0vyRZ8Kh1yRVz/JHy6+UhG8EeWPKHfE8UbU9oi+ntEG
kWNhXy5tWt/aHBcU1TEXFgmHCI9cgh2St79wSH1Tt1ZyNhZ1MLdGelbGcgi2
h1yDD+RaKBQKRVUBsfSJ7dqZGwsKSvWdjfKIz9W63tWWox/Rk9/bv7Y5t7Ho
T9GnlyREioU/hEsua1rX3NCiWda8kalvbnlyc6PckY434ngkHYeE9sfVckwX
yrGdL5xxQYHwh/DGhXL8FzaqZa5u2sBy6zGOW+sHtSGZbJC75dw/I9dAY+YK
haKq4bMPPzSTOnQwN+Tnl4oPh7oe/X8jteWNGtmeJPhoqMNuk99MuKeprMnr
motFp17cUvijRR3ry7qi+YFZzSLPxuZIxx9xsY44Toj6reJ8WHEcEo2BXNbs
QHNeY2yNOuaCJiJwZ+O65rr8pqZti2Tcp02LFuawevXsOaJv5JmuNiSub34n
OefPyrnfLtdAoVAoqiLIx5rUvr25QdbC0TxV3z+Q2vIDayfzdI+qX9/8W/Sk
903dVJhvLnHx5Iuaybo8D/5okBVnlIc30nFHnL8qyhvXxkg6+yTOj5Xkjwbm
vEbCH42EO+TnRY2ws/JL2WvYaRfLeTwomD11Dr3zIxzSCbtDzjn5VgqFQlGV
sWTUKHNDYaHlijBX9SbXv7yhq3Ngngez+aL+qLaFLYRHCsxNRUlpW1SYNWdk
a2+kszuy4Y042yMbDgltkBvkmK6XY0Ru4FjlmKM+Px8r+lfz5qaFqy+kzvAC
+T99XGwchJ9yrlfKOVcoFIqqji937DDTunRJ6krHIfxkbquffVEsa+rz8vNj
bYpYO8Plu1YEb5TFHdcmsrM90nHILvwhxxLmYcXNTS+Vc8DMdzl3vi6fWbj/
Ft6903HIbDnXnHOFQqGoDvj6q6/MlM6dTduSEllrF5lzZM2c72bv2R4d8v+b
YzghnaSbNV6Wj6q83BGNc1ybSM8bu8shZdWjhz4sn/vMHHV6YzVwfcEOF9uN
7c2Uc8y5VigUiuqGyXfeac4XDmnp/C9NhUPObNo0ZZdEZ4eXJZlm/+0Jb8T5
qzLZHF6uieGQdPyRbT+TOB8WHHKrmz1Vz8WOzjztNPPmG29U9iVWKBSKCsHK
lSvNj37wA6vvGsna+Veyhr7R+W8yzYLNVrLhjUzckSm3Kh1PZMshZcVAYvvy
JtLbIORk3VxYaH584IHmQCdXXXWVef/99yv7MisUCsVexdq1a80f//hHU1ds
j7wmTcyJDRqY64qKYvubZ5oBm83c2Gw4Y3dsjmvK4I4oh2RTl77bNgj1Hwcd
ZAYJZ5x33nlmP7Hl8oSPO3bsaD7UvF2FQlFN8MYbb5gLLrjA1KtXzzQQ3ril
bVsz4rbbzA3FxeYG0YPRuuxMfBI32y8dX5RVy5Ept6o8Nse+5A/LIa7ucoaL
d6xbt85ys+3XK+9169bNbNOeJQqFoorj3XffNddff71p2LChtT28j4V+flPv
v99cW1horikoSNvjozwSxxnl5Y0od2SyOa5J8342cZBMPXkz+bBuJcdZztmz
cu6+2L49dZ6XLVtmTjnllGQu9De+YYYNG2Y+156JCoWiiuKDDz4wnTp1Mk2b
NrV6DT/Lm2++mXp/+yefmKVjx5oJ7dubq/PzM/auLa+E28rU6zCuliMb+8LL
1WVwSBx/ZOqpmMkGYUbwFDlXL8o5+1zOXRSzZs0yxx13XLJf73e+Y6ZPn26+
/PLLfXnJFQqFYo/x6aefmscff9y0aNHC6jP8K2vWrIn9LHXqEzp0MFfL2vr6
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
oe/hD2wEbO0f//jHdlY0PWy9UOdHzL4s/iC3i14qrLeoD8yVHtfsM5yITw87
5PLLL98nMXxFxQKuoP6JdcEhhxxiZ23mmm1JbYifiUbPIdZ3VbFPtqL6Az2J
f4Yc2U6dOqXlD9bjxNHpwUheLvyBTqUuAzsbHxY2ihdyl6jnzcQfPLfMCfU9
h8jXZQ5iLsD33KKWEJsIXxz7qqi6wBd01113mSZNmti1CjNfsKVzDf6Z5LnA
70y/CJ6LXLGRFAoPn4dCDJEaw3QzmLif+QwxbZ7DMP4Rl39FHn2m+AevjR8/
3nISzwjrrFyr2WMfmQeBH8s/x7lgGynKD9bv+FW5h1nX//WvfzVvvvlmZe9W
WvAcMk8A+xeuw6YnF1ChyCWgI/FHYdPjb8VWxi7wOp+f5DVSD8Kzh20B9jT/
Ch80ub/oZXKGp0yZkpM2OvYYPOd7NzL/R/Pzqx64r71PiPgCa55cXs/755K+
bPiIuffIF8P/plDkEtDb2Mff/va3bQ8o1mnkYZETRS+g888/33IBMW6fU5gt
f5DvFX1OqbGg1hfuoEaE+pS4GvdcATls2F08w/SOv/rqq219pKJqAPuaeBzc
gb914sSJOXuvhWAfeQbJqScGx71HzLGy6lQUijj4viX032GNwzMGL5B3dMQR
R9if1JGHdSP+vj755JN36dvj/Ves966//vpSzyo2ODUocAf5k/TWxQed688z
6z5sKfLzqVempiabuYeKygX1Sr4elRwN7reqls/EWo55N9x75ChS21vWvGaF
Yl/C1wpyXxIrZz4Is5ToNU2v3tCnBXgGybHFlojWh/veWNglxA/89/A3UyNF
rJwYZufOnfdpbfmeguOFX/FHs//EX7XGKzfhe1uxxuF+Q+/ecccdVVbv0pfh
jDPOsOuuFi1a2L4rWhuiyDV4HolKWZ/L9D7gWb7yyiutD4j1+4033lgl+xMy
R/23v/2tfY6JbTK7MBdzeGoyuOdY8+BzxO+D4EetKjML0gE/3E9/+tPUDDjy
y3Oh7lGhqEjg68LfQz0I9b4XXXRRTsQBM/FfJhArwm/Hc0zdJXm9uhbMDXi7
g14GxAu438gNqS65S7NmzUrNqaFXNLPOqpo/TqHIFvin6OVDrAM/As8yPq1c
AL4MYvfMqCpvPJznmLiQj8lqnXBugF6E+KywcbF1ud+wGasLwrx3n0tGTmQu
5i4qFHsC6rV79epla9t9rwh6/OQCeA7JLWMGHHnEu1O3SC8YPy+EnzzXuVbL
XJMAd5CvQayDWPM555xjXn755ZzPzSgv8FnRh476Qv9cVcfjVNRccI9Tc4h+
9uukaJ5vZQLbg1xI/BtnnXXWbsVieF6ps6d+hXgI+WbMA0pXg6moOJBnRXyN
vAauxT//+c9q3Xuf+/eBBx6wsXSeL2p/yU+prserqDnAlp4+fbrtl8W9fcwx
x+TUfGf2j/0hn5M13LRp03Z7W/AkeWp+ljX1LMxvqOqx2qoE8sfRn/isuN+o
Vwrz/qoryB8nzuP7jnLcrIOq+3Erqi/QzdT2HnfccanacuYd5opfh2eLmAy5
kOgbenjtib3gc5Xpw0cfSWI85An8/e9/t3nQiooD8SZ8iJx3/FXYktiU1K7W
FB1K3I58FHIFqFNnfqbmAyqqKtCZ1PqiR5nBxOzZXPLnoFfIl6K3I/3o6We1
N3QNvIkPmvoQ8kWpESHXEjsnV7izusCvAegb7X2HXE96I5J7VVO4A/hZO2ee
eablUM4DfSI0r1dR1YAPmnU9upN8K/rBE0PPpeeZWl76/DKjin7DPGd7a//Y
Dr2xmEfE7F18KYcffrjlUK0z3Dvw+vLOO++05xju4BzTH6Gmrrs5J2vXrrXr
Fc4HOeXU2eu6RVFVgN6ktyB+WPyx1G6hM3OJO9gXat7ROz/84Q+tHqqI/WNt
zPOLfQOH0HsRfUd8U/Msdw++NwL9EP7whz/Y+4z1Nj2RqYHIpfusMsB9tXjx
4lRtCPm9Y8aM0ftNkfPAB0tPQdb0+GGvuOIKWzOYa3jxxRdtri77iU1QkTY+
zy1z47F18Muj6+jdQpyEfow1Xd+VFxs2bLD2LHXXrLHJs6IHe7T3Wk0G9gZ9
humDCocQg3zuuef0XqsAYOvC18ycoBaM/jLl4WquCTXUzJucPXu2jRnXxJ6s
9AJlNnpeXp71W+Vqf3O4gtgi/IaPbV/lR/melMTUeaaZeYd/i3oT9S+UDZ5T
YkjUAcL7flbMPffcozluMSDWSD0ssxi430455RTbo64mAJ3Mc47PHCGvpbzc
CQfwPb8NcjTitgFfMCsVrsbPQJ/98sR52ebAgQPN8ccfb21FfI/MnaxJwD/F
nHP6tHOv/vGPf8yZ2vIoyNHlWuNLYtbIvtTdxIWIaWL7wLHYIieccILp2rVr
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
iq0fEBukeIrI+OIkL/lYiHBIi84tTL3v1UtyR5M6Ju+CPFPUr8icPPlks+GT
qpuPoFAoch/km1KjUPR4kWlyThNT+8DaplbtWqb+j+ubFg+12JlXNTapD63u
f87pw8WJpK8q1IcbA9kg8qrow9XO1y82iPX/T5ffJxen1tN2zT4gwiFubc3r
RQOKzEFDDzKdlnWqtPNEHlrnhZ1NSc8SU9SrKMVxpbgjiA1ZvxW2xzPOd7cw
kfTvCS+UvCLn5bWSJM9ie2xyIv/ndfv+ypKkD2t+8nzjAytmmyOTPqyWA4vs
9Tnwxwfa68V1a3x2Y9OyV9K/VSTvnzTpJPPh5x9W2jlTKBTVFx9u/9CcNOwk
U9QzqQ/hkEZnNDK19q9latWpZRr8qoEp7NHCtBxZZFqOlc9MbmmKfQz4+eJd
9eEG54d509kg2B/r5P2X5f3lJUl7BV2K/SL8UTyuuLQPa0DS5khxx5M749FF
g4pMydAS0/nFzmnrHioKO77cYbq80MUkuieS+jnKHYHfKmWnhVw718U9xFaD
F0rWlFg/VcnrjmM3JO0Oyx1rRVYlz1fJCyJzS5I+vynJWEqzPgeaJo/VNQ07
1TX7n1THXqda9Wqbhr9raIq6FyXPF+dxYEtz2PDDzKoPdLaHQqHYu0CnUAt4
WL/DkrUYfZP6sPDRQtPg5w1Mrf1EL9WtZeqdUcc07bqfKehb17QYdmAyJ2hO
wnJByVLRby8l9WHJOqf/XnfidaFwBzZKyWL5fX5JUp9OE5kkMlZkpMjQ4p31
ISK+Htv/3/vRrN9f1vhdVnbJ2Atlb2PUmlGmsFuhadmzZar+pVTMI6zvGCuf
mSjnZ2oybmH9dfOT/GHP14oS68+z52ytO2/r3O+r3fn03DFPZGZJ8nxhrwkv
Ne9VzzS5t4454Fe17fWx1+in+5sW3ZL+RnjDnsNBLa0cN+44s3LrSuUQhUKx
V4AuWfn+SnPc4OPsetrWN7uYNbqn4IF8c8Bxde3atnb9WqbJ32ublj3qmIJh
9Wyers0LWrhTH9r18hrnd3nF/S66sNVLrZJ2x+Jiyx0ls0RmyP+fku9PEBkj
MkJkmMgQkcGOR5y0HOLyfAPBd1M4tNCMWj9qn5wrcojbz2tvCp4osPWOsX4r
H/MYm0jlNFsfnbc9nk/Gwu35erHExkDgiVarWiVFzlOrFSLL5Xwtkc88n7Q7
4I6S6SJPlSTPl/Bt/qP1TMM/CnccUMty/H7/JXZi+9omr8eBpmhwkeVXe97c
OeS1EyacYJZtWbZPzpdCoajeWPbuMnPC4BOSfqtIPXnRk0Wm6RMHmgZta5v9
jkz6seo0rmUat6ltmg+vl/RdyXraro+XuLXyiqS/Hmm1UvTgiyLLRJaIPlxY
YvkmpQunlNjYObqQWHDxcMcfQ53wu7zma9nJ87X1IiNcXpPo6oIhBab9svbm
ox0VWx+Cf6/D3A4m/7F8k+iVKG17hDGPCHdY/9xMxx0LnO9qiZyDZc6Pt7zY
/rTnyJ2nVi+IPN8qyRvw7DMiT4tMTnJHydgSe14a/esAU7th8rrs9x3hjttr
m0aP72cadqtj8vo0MEXDC3fW/Q9L7l/+4Hxz1rNnVei5UigUNQNnjTvL5D/h
dGKwni7qX2jyHj/QNOyKTqpjDryxtqlzaK1kfLZQOKRd/aQvBttjkeOPpaWl
1WKnCxeIzGtldSH+e68LS8aLjClJ+q3E9rA6brjjEWyRUc4uITYyPpES6xca
nUj1iMofmm86LO9gPtxRcfHhZe8sMwWPiN3RI7GTP7ztEdRS+twCau5tXvPs
4tR5sjHwpS72AX+I8H977uQcwhmt5ovMEZnZaidviM1RMlFkXPJ8lYwqMc2v
aW72a7GfvR77HVbLNLyljmnUU7ij136mUW/52bu2KRjZzPrPbJ3m6CTvYq+d
MPEEM+OtGRV2rhQKRfXHjPUzrO1R2KNwpz/G+fLzezc1DbrWsmvZhj1EN/Wr
Y+pfV9vUTiQ5ZP/D97e8Y3XhkpKdstj5658vidWF+KtKJpTYNTR6sGSEyLCS
pK3h7Q14YYzjC/Jep7r487TiZM8PWdfb/h+873ikYFhBhfllPtj+gblq+lUm
8YT8rZ6J0ucqrC8fuzNPt+VzLW39vbc3bA1HUF9u7bTlyXNm4yEL5Pc5zk81
I+ANf65Gi4xMSn7bfFO3VbI+8P/bu9LYqK4sPWY1YLvsqnLVe6/K6bSGkNEs
7RkJMvxp6LQGaTRC3ZohUTpDjzSaaDpS9yTNkpDNxMRmsQGz2WZ1CPseFidA
FowdSAhrExJoEvYlIZiENSxmPXOW+6pePb8qO9iEDtzPOnK5ylX1fMr6vnvO
uefc9j9tD9mFmZCJmpExG20efl4L0Ba2geDaHM6dcc+i0hHyFeltj7d7QM2J
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
    "], {{0, 300}, {
    400, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{294.47265625, Automatic},
  ImageSizeRaw->{400, 300},
  PlotRange->{{0, 400}, {0, 300}}]], "Text",
 CellChangeTimes->{{3.7089995686216383`*^9, 3.7089995781465397`*^9}}],

Cell[CellGroupData[{

Cell["Modules", "Subsection",
 CellChangeTimes->{{3.70900085805235*^9, 3.709000859282955*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dist2D", "[", 
   RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"B", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"B", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"x1_", ",", "y1_", ",", "x2_", ",", "y2_", ",", "bl_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y1", "-", "y2"}], ")"}], "2"]}], "]"}], "-", 
   SuperscriptBox["bl", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Sigma]", "[", 
   RowBox[{
   "X1_", ",", "Y1_", ",", "X2_", ",", "Y2_", ",", "bl_", ",", "dvar_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"x1v", ",", "y1v", ",", "x2v", ",", "y2v", ",", "bl"}], "]"}],
        ",", "dvar"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1v", "\[Rule]", "X1"}], ",", 
       RowBox[{"y1v", "\[Rule]", "Y1"}], ",", 
       RowBox[{"x2v", "\[Rule]", "X2"}], ",", 
       RowBox[{"y2v", "\[Rule]", "Y2"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.708965897367896*^9, 3.7089659695018663`*^9}, {
  3.7089670246503267`*^9, 3.7089670248770227`*^9}, {3.70896775836272*^9, 
  3.708967763169379*^9}, {3.708969297601643*^9, 3.708969297974209*^9}, {
  3.708998768887643*^9, 3.7089987692407827`*^9}, {3.708999542047451*^9, 
  3.708999552633932*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.70900085805235*^9, 3.70900086885096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"H", "-", "O", "-", 
    RowBox[{"H", " ", "angle", " ", "in", " ", "radian"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"angle", "=", "170"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "define", " ", "2", "D", " ", "coordinates", " ", "for", " ", "OW"}], 
     ",", " ", "HW1", ",", " ", 
     RowBox[{"and", " ", "HW3"}]}], "*)"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"AtomCord", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "0."}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "angle"}], "/", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", 
              RowBox[{"Pi", "/", "360"}]}], ")"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "angle"}], "/", "2"}], "/", "360"}], " ", "2", 
             "Pi"}], "]"}], "*", "1.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"angle", "/", "2"}], "/", "360"}], " ", "2", "Pi"}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"angle", "/", "2"}], "/", "360"}], " ", "2", "Pi"}], 
            "]"}], "*", "4"}]}], "}"}]}], "}"}]}], ";"}],
    FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
    RowBox[{"R2", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
    RowBox[{"R3", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mass", "=", 
     RowBox[{"{", 
      RowBox[{"16", ",", "1", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"constrants", " ", "for", " ", 
      SubscriptBox["r", 
       RowBox[{"OW", "-", "HW1"}]]}], ",", " ", 
     SubscriptBox["r", 
      RowBox[{"OW", "-", "HW2"}]], ",", " ", 
     RowBox[{"and", " ", 
      SubscriptBox["r", 
       RowBox[{"HW1", "-", "HW2"}]]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["1", "2"], "+", 
         SuperscriptBox["1", "2"], "-", 
         RowBox[{"2", "*", "1", "*", "1", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"109.47", "/", "360"}], "*", "2", " ", "Pi"}], "]"}]}]}], 
        "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "indices", " ", "of", " ", "atoms", " ", "used", " ", "in", " ", "each", 
     " ", "constraint"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pairidx", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Iteration", " ", "method", " ", "parametrs"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Maxiter", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"toler", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"debug", "=", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7089684489466753`*^9, 3.708968500341778*^9}, {
   3.708968639060134*^9, 3.708968643556982*^9}, {3.7089795252335873`*^9, 
   3.708979551034844*^9}, {3.7089819112292624`*^9, 3.7089819114848747`*^9}, {
   3.708982015560649*^9, 3.708982022181459*^9}, {3.708982270267509*^9, 
   3.70898227882696*^9}, {3.7089825646449947`*^9, 3.7089825916649017`*^9}, 
   3.7089826905044937`*^9, {3.7089827392063417`*^9, 3.708982739954508*^9}, {
   3.70898329470765*^9, 3.708983307850089*^9}, {3.708983475057344*^9, 
   3.708983475263912*^9}, {3.708983542110756*^9, 3.708983610004027*^9}, 
   3.7089836492505007`*^9, {3.708983686221498*^9, 3.708983715309517*^9}, {
   3.708983816882846*^9, 3.708983817153758*^9}, {3.708984421722995*^9, 
   3.708984434610125*^9}, {3.708984564507257*^9, 3.7089845874101343`*^9}, {
   3.708984679028193*^9, 3.7089847083552523`*^9}, {3.708985525403655*^9, 
   3.708985555909237*^9}, {3.708985689927814*^9, 3.708985785842072*^9}, {
   3.7089859523725843`*^9, 3.708985985682456*^9}, {3.708987604628962*^9, 
   3.708987631973391*^9}, {3.708987682431622*^9, 3.708987795897838*^9}, {
   3.708987876956773*^9, 3.7089878772841587`*^9}, {3.708987910113576*^9, 
   3.708987914079298*^9}, {3.708988071933217*^9, 3.708988080336759*^9}, {
   3.708988818731654*^9, 3.708988819506659*^9}, {3.708988899891336*^9, 
   3.708988900183573*^9}, {3.7089889566300373`*^9, 3.708988976877985*^9}, {
   3.7089890130665827`*^9, 3.70898906496174*^9}, {3.7089927704225197`*^9, 
   3.7089927707828293`*^9}, {3.7089951887774*^9, 3.7089952967870817`*^9}, {
   3.708996232460312*^9, 3.708996263898509*^9}, {3.708996375040105*^9, 
   3.708996404872995*^9}, {3.708996860081874*^9, 3.708996888546624*^9}, {
   3.70899844226085*^9, 3.708998442923924*^9}, {3.708998484075953*^9, 
   3.708998498473425*^9}, {3.708998564577135*^9, 3.708998725743779*^9}, 
   3.7089987771128483`*^9, {3.70899881003059*^9, 3.708998827035595*^9}, {
   3.7089990652441483`*^9, 3.708999068246696*^9}, {3.7089991099045753`*^9, 
   3.7089991500370398`*^9}, {3.708999435030919*^9, 3.708999438030423*^9}, {
   3.708999656205379*^9, 3.7089997173364964`*^9}, {3.70899975587567*^9, 
   3.708999759728403*^9}, {3.708999895256404*^9, 3.7089999119432917`*^9}, {
   3.7089999858675222`*^9, 3.709000019086129*^9}, {3.7090000630844727`*^9, 
   3.709000097960602*^9}, {3.709000222423036*^9, 3.709000223365225*^9}, {
   3.709000288242734*^9, 3.709000293945366*^9}, {3.70931549359834*^9, 
   3.709315523042808*^9}, {3.709315566419117*^9, 3.7093155711052723`*^9}, {
   3.709315743309099*^9, 3.709315749596545*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main program", "Subsection",
 CellChangeTimes->{{3.70900085805235*^9, 3.709000879130488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"J", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "d", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "d", "]"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", "Jacobian", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AtomCordList", "=", 
   RowBox[{"{", "AtomCord", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RList", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"R1", ",", "R2", ",", "R3"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AngleList", "=", 
    RowBox[{"{", "angle", "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Main", " ", "program"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"x1", "=", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"pairidx", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y1", "=", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"pairidx", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x2", "=", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"pairidx", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y2", "=", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"pairidx", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"J", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"AtomCord", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"pairidx", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"AtomCord", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"pairidx", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ")"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d\[Sigma]", "[", 
                   RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2", ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "x1v"}], "]"}], " ", 
                  
                  SuperscriptBox[
                   RowBox[{"Mass", "[", 
                    RowBox[{"[", 
                    RowBox[{"pairidx", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
                   RowBox[{"-", "1"}]]}], ",", "0"}], "]"}], "-", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d\[Sigma]", "[", 
                   RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2", ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "x2v"}], "]"}], " ", 
                  
                  SuperscriptBox[
                   RowBox[{"Mass", "[", 
                    RowBox[{"[", 
                    RowBox[{"pairidx", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                   RowBox[{"-", "1"}]]}], ",", "0"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d\[Sigma]", "[", 
                   RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2", ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "y1v"}], "]"}], " ", 
                  
                  SuperscriptBox[
                   RowBox[{"Mass", "[", 
                    RowBox[{"[", 
                    RowBox[{"pairidx", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
                   RowBox[{"-", "1"}]]}], ",", "0"}], "]"}], "-", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"pairidx", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"d\[Sigma]", "[", 
                   RowBox[{"x1", ",", "y1", ",", "x2", ",", "y2", ",", 
                    RowBox[{"d", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "y2v"}], "]"}], " ", 
                  
                  SuperscriptBox[
                   RowBox[{"Mass", "[", 
                    RowBox[{"[", 
                    RowBox[{"pairidx", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "]"}], 
                   RowBox[{"-", "1"}]]}], ",", "0"}], "]"}]}]}], "}"}]}]}]}], 
         ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "d", "]"}]}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"Inverse", "[", "J", "]"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Dist2D", "[", 
            RowBox[{
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}], "2"], 
          "-", 
          SuperscriptBox[
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"]}], ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Dist2D", "[", 
            RowBox[{
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}], "2"], 
          "-", 
          SuperscriptBox[
           RowBox[{"d", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "2"]}], ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Dist2D", "[", 
            RowBox[{
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"AtomCord", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"pairidx", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}], "2"], 
          "-", 
          SuperscriptBox[
           RowBox[{"d", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "2"]}]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"coord", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xa", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"ya", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"xb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"yb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xa", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"ya", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"xb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"yb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xa", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"ya", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"xb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"yb", "->", 
          RowBox[{
           RowBox[{"AtomCord", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
              RowBox[{"d", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "xa"}], "]"}]}], 
         "/.", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "1", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
              RowBox[{"d", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "ya"}], "]"}]}], 
         "/.", 
         RowBox[{"coord", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "1", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "xb"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "xa"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "2", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "yb"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "ya"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "2", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "xb"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "3"}], "}"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "3", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomCord", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "2"}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"xa", ",", "ya", ",", "xb", ",", "yb", ",", 
               RowBox[{"d", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "yb"}], "]"}]}],
           "/.", 
          RowBox[{"coord", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "3"}], "}"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Mass", "[", 
        RowBox[{"[", "3", "]"}], "]"}], 
       RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"R1", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"R2", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"R3", "=", 
     RowBox[{"Dist2D", "[", 
      RowBox[{
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"AtomCord", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"angle", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["R3", "2"], "-", 
            SuperscriptBox["R2", "2"], "-", 
            SuperscriptBox["R1", "2"]}], ")"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "R1", "*", "R2"}], ")"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "Pi"}], ")"}]}], "*", "360"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"AtomCordList", ",", "AtomCord"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"RList", ",", 
      RowBox[{"{", 
       RowBox[{"R1", ",", "R2", ",", "R3"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"AngleList", ",", "angle"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Printing", " ", "information"}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{"Error1", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"R1", "-", 
       RowBox[{"d", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Error2", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"R2", "-", 
       RowBox[{"d", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Error3", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"R3", "-", 
       RowBox[{"d", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"debug", "\[Equal]", "0"}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\< iteration \>\"", ",", "count", ",", "\"\< Error1 = \>\"", ",", 
          "Error1", ",", "\"\< , Error2 = \>\"", ",", "Error2"}], "}"}], 
        "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Error1", "<", "toler"}], "&&", 
       RowBox[{"Error2", "<", "toler"}], "&&", 
       RowBox[{"Error3", "<", "toler"}]}], ",", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
          "count", ",", "\"\< iterations: \>\"", ",", "\"\<R1 = \>\"", ",", 
           "R1", ",", "\"\<, R2 = \>\"", ",", "R2", ",", "\"\<, R3 = \>\"", 
           ",", "R3"}], "}"}], "]"}], "]"}], ";", 
       RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"count", "\[Equal]", "Maxiter"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Error1", "\[GreaterEqual]", "toler"}], "||", 
         RowBox[{"Error2", "\[GreaterEqual]", "toler"}], "||", 
         RowBox[{"Error3", "\[GreaterEqual]", "toler"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<SHAKE failed to converge after \>\"", ",", "count", ",", 
            "\"\< iterations\>\""}], "}"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"count", ",", "1", ",", "Maxiter"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.708964393494741*^9, 3.7089644399998627`*^9}, {
   3.708965074783021*^9, 3.708965080582407*^9}, {3.708965143711667*^9, 
   3.7089651644499063`*^9}, {3.708966509863894*^9, 3.708966547086299*^9}, 
   3.7089665798292522`*^9, {3.7089666600083227`*^9, 3.7089667559037037`*^9}, {
   3.708966844045505*^9, 3.708966904990588*^9}, {3.708966938366837*^9, 
   3.708966941864666*^9}, {3.708967298050332*^9, 3.708967302618207*^9}, {
   3.708967404224042*^9, 3.708967458742023*^9}, {3.708968715134548*^9, 
   3.708968771918824*^9}, {3.708968808562207*^9, 3.7089688186500263`*^9}, 
   3.708978855977091*^9, {3.708979073330716*^9, 3.708979243975863*^9}, {
   3.708979302593841*^9, 3.7089793438361273`*^9}, {3.708979392795191*^9, 
   3.708979410651258*^9}, {3.708979555194006*^9, 3.708979567537551*^9}, {
   3.708979612066031*^9, 3.708979676561203*^9}, {3.7089797138605556`*^9, 
   3.708979725974662*^9}, {3.708979763358273*^9, 3.708979785701138*^9}, {
   3.708979832420442*^9, 3.708979853236446*^9}, {3.708980165353599*^9, 
   3.708980173811389*^9}, {3.70898212263728*^9, 3.708982186854467*^9}, {
   3.708982980348708*^9, 3.708983229887082*^9}, {3.708983281629458*^9, 
   3.708983326134201*^9}, {3.708983359548538*^9, 3.708983456423744*^9}, {
   3.708983552475719*^9, 3.708983553763279*^9}, {3.708983725022747*^9, 
   3.708983781968375*^9}, {3.708984040229164*^9, 3.708984059496029*^9}, {
   3.708984260137162*^9, 3.7089843327897387`*^9}, {3.70898477476966*^9, 
   3.7089848201924467`*^9}, {3.70898534048818*^9, 3.708985344196147*^9}, {
   3.708985566717037*^9, 3.708985594824596*^9}, {3.7089856252347717`*^9, 
   3.708985673147872*^9}, {3.70898587526544*^9, 3.70898587828829*^9}, 
   3.708985936694376*^9, {3.7089859964078083`*^9, 3.708986070407099*^9}, {
   3.70899163695772*^9, 3.708991676411592*^9}, {3.7089917254275723`*^9, 
   3.7089917558086843`*^9}, {3.7089946486186657`*^9, 3.7089948300022593`*^9}, 
   3.7089951751488237`*^9, {3.708995307226384*^9, 3.7089954094792337`*^9}, {
   3.7089955586789*^9, 3.70899557486898*^9}, {3.70899573033936*^9, 
   3.7089959131785917`*^9}, 3.708996126411043*^9, {3.708996289923531*^9, 
   3.708996331453663*^9}, {3.708996435458785*^9, 3.708996437352426*^9}, {
   3.708996471949059*^9, 3.708996619230996*^9}, 3.7089967768684397`*^9, {
   3.70899681400644*^9, 3.708996818869019*^9}, {3.708998395178197*^9, 
   3.708998425988387*^9}, {3.70899852373134*^9, 3.708998523798769*^9}, {
   3.708998730582218*^9, 3.708998735370492*^9}, {3.708999607342247*^9, 
   3.708999614278515*^9}}],

Cell[BoxData[
 TemplateBox[{
  "40","\" iterations: \"","\"R1 = \"","0.9999951789816413`","\", R2 = \"",
   "1.0000068715627028`","\", R3 = \"","1.632990167771249`"},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.710687686467374*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation", "Subsection",
 CellChangeTimes->{{3.70900085805235*^9, 3.70900088732158*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"range", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Gray"}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AtomCordList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"AtomCordList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"PointSize", "[", "0.06", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"PointSize", "[", "0.04", "]"}]}], "}"}]}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<R1 = \>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"RList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"5", ",", "4"}], "}"}]}], "]"}], ",", 
             "\"\< nm\\nR2 = \>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"RList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"5", ",", "4"}], "}"}]}], "]"}], ",", 
             "\"\< nm\\n\[Theta] = \>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"AngleList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "3"}], "}"}]}], "]"}], ",", 
             "\"\<\[Degree]\>\""}], "}"}], "]"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black", ",", "Bold"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.7"}], " ", "range"}], ",", 
          RowBox[{"0.7", " ", "range"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "AtomCordList", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", "7"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.708984356672068*^9, 3.70898438281113*^9}, {
   3.708984837803767*^9, 3.7089848523504887`*^9}, {3.7089849064012957`*^9, 
   3.70898495977649*^9}, {3.708985180879033*^9, 3.708985190694558*^9}, {
   3.708985498498204*^9, 3.7089854991503277`*^9}, {3.7089863333368073`*^9, 
   3.708986371957766*^9}, {3.708986411475878*^9, 3.708986419269823*^9}, {
   3.708986449683326*^9, 3.708986583532556*^9}, {3.708988843478147*^9, 
   3.708988849998122*^9}, {3.708996634756888*^9, 3.708996732759246*^9}, {
   3.708996798869639*^9, 3.708996800709022*^9}, 3.708998066463337*^9, {
   3.708998148892214*^9, 3.708998227112733*^9}, {3.7089983633753433`*^9, 
   3.708998368351892*^9}, {3.708998839199975*^9, 3.7089989876689262`*^9}, {
   3.708999042627922*^9, 3.70899904357777*^9}, {3.708999099585177*^9, 
   3.70899910017556*^9}, {3.708999227397194*^9, 3.708999227772655*^9}, {
   3.708999260288254*^9, 3.7089993662718563`*^9}, {3.708999952891181*^9, 
   3.7089999555461683`*^9}, {3.709000152140091*^9, 3.7090001546266537`*^9}, {
   3.709000454944298*^9, 3.709000496317724*^9}, {3.709000560069127*^9, 
   3.709000609482718*^9}, {3.709001218160802*^9, 3.709001219056799*^9}, {
   3.7093155917785473`*^9, 3.709315606153255*^9}, {3.7093157055841084`*^9, 
   3.709315712967608*^9}, {3.710687637311263*^9, 3.710687638830349*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 24, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 41, 1}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$21073888$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$21073888$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ListLinePlot[{{
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 1], 
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 2]}, {
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 1], 
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 3]}}, 
         PlotStyle -> {Gray, Gray}, Axes -> False, 
         PlotRange -> {{-$CellContext`range, $CellContext`range}, \
{-$CellContext`range, $CellContext`range}}, AspectRatio -> 1], 
        ListPlot[{{
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 1]}, {
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 2], 
           Part[
            Part[$CellContext`AtomCordList, $CellContext`i$$], 3]}}, 
         PlotStyle -> {{Red, 
            PointSize[0.06]}, {Green, 
            PointSize[0.04]}}], 
        Graphics[
         Text[
          Style[
           Row[{"R1 = ", 
             NumberForm[
              Part[$CellContext`RList, $CellContext`i$$, 1], {5, 4}], 
             " nm\nR2 = ", 
             NumberForm[
              Part[$CellContext`RList, $CellContext`i$$, 2], {5, 4}], 
             " nm\n\[Theta] = ", 
             NumberForm[
              Part[$CellContext`AngleList, $CellContext`i$$], {6, 3}], 
             "\[Degree]"}], FontSize -> 13, Black, 
           Bold], {(-0.7) $CellContext`range, 0.7 $CellContext`range}]]], 
      "Specifications" :> {{$CellContext`i$$, 1, 41, 1, AnimationRunning -> 
         False, AnimationRate -> 7, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7089843756609697`*^9, 3.7089843832227917`*^9}, 
   3.708984457229465*^9, 3.708984597908104*^9, 3.708984715541565*^9, {
   3.7089848421497917`*^9, 3.708984853464573*^9}, 3.708984962339943*^9, 
   3.708985191422724*^9, 3.708985423193609*^9, 3.7089854998339577`*^9, 
   3.7089857913380327`*^9, 3.7089858858431683`*^9, {3.708986347510141*^9, 
   3.70898637260045*^9}, 3.708986420530651*^9, 3.708986495037187*^9, {
   3.708986531476594*^9, 3.7089865838732157`*^9}, 3.708987657986546*^9, {
   3.708988826192026*^9, 3.70898885038652*^9}, 3.708988911204439*^9, 
   3.708992954266947*^9, 3.708995221181428*^9, 3.708996221993773*^9, 
   3.70899634261129*^9, 3.7089964114449587`*^9, {3.7089967092334557`*^9, 
   3.708996733225511*^9}, {3.708996784186824*^9, 3.708996824923225*^9}, {
   3.708996865826445*^9, 3.708996883284513*^9}, 3.708998068814747*^9, {
   3.708998153478928*^9, 3.708998228671213*^9}, 3.7089983698772507`*^9, 
   3.708998451537118*^9, 3.708998529479424*^9, {3.7089988182924557`*^9, 
   3.708998849480085*^9}, {3.708998893513485*^9, 3.7089989124933357`*^9}, {
   3.708998984045836*^9, 3.708998987966901*^9}, 3.7089990440982647`*^9, {
   3.708999096606391*^9, 3.7089991312612658`*^9}, 3.708999163729868*^9, 
   3.708999228257235*^9, {3.7089993292904253`*^9, 3.708999368887293*^9}, 
   3.708999449944667*^9, 3.70899968883882*^9, 3.708999722558159*^9, 
   3.70899976470748*^9, 3.7089999173417253`*^9, 3.708999998118485*^9, 
   3.709000101634975*^9, 3.709000155005035*^9, 3.709000227504981*^9, {
   3.7090004557511053`*^9, 3.709000496694372*^9}, {3.709000562686882*^9, 
   3.709000609901795*^9}, 3.709001219793305*^9, 3.709315535531438*^9, {
   3.709315580018853*^9, 3.709315606890726*^9}, {3.709315707453147*^9, 
   3.709315713500647*^9}, 3.709315762031196*^9, 3.710687693015765*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1196, 628},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 182, 5, 30, "Text"],
Cell[743, 27, 48390, 798, 235, "Text"],
Cell[CellGroupData[{
Cell[49158, 829, 94, 1, 44, "Subsection"],
Cell[49255, 832, 2148, 62, 109, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51440, 899, 96, 1, 44, "Subsection"],
Cell[51539, 902, 6902, 164, 360, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58478, 1071, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[58602, 1076, 25809, 660, 990, "Input"],
Cell[84414, 1738, 235, 5, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84698, 1749, 95, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[84818, 1754, 5636, 135, 165, "Input"],
Cell[90457, 1891, 5118, 98, 451, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
